2019-11-05 20:36:12 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x10baeab90>, dataset='../resources/wikipedia.sample', query_file=<_io.TextIOWrapper name='../resources/queries_utf8.txt' mode='r' encoding='utf-8'>)
2019-11-05 20:36:12 - my_example - INFO - start loading documents...
2019-11-05 20:36:13 - my_example - INFO - loading documents is complete
2019-11-05 20:36:13 - my_example - INFO - start building inverted index...
2019-11-05 20:36:20 - my_example - INFO - inverted index is ready for queries
2019-11-05 20:36:20 - my_example - DEBUG - the answer to query ['two', 'words'] is []
2019-11-05 20:36:20 - my_example - DEBUG - the answer to query ['even', 'more', 'words'] is []
2019-11-05 20:36:20 - my_example - DEBUG - the answer to query ['тестовый', 'запрос'] is []
2019-11-05 20:36:20 - my_example - DEBUG - the answer to query ['кодировка', 'utf-8'] is []
2019-11-05 20:36:47 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x1054b0b90>, dataset='../resources/wikipedia.sample', query_file=<_io.TextIOWrapper name='../resources/queries_utf8.txt' mode='r' encoding='utf-8'>)
2019-11-05 20:36:47 - my_example - INFO - start loading documents...
2019-11-05 20:36:47 - my_example - INFO - loading documents is complete
2019-11-05 20:36:47 - my_example - INFO - start building inverted index...
2019-11-05 20:36:55 - my_example - INFO - inverted index is ready for queries
2019-11-05 20:36:55 - my_example - DEBUG - the answer to query ['two', 'words'] is []
2019-11-05 20:36:55 - my_example - DEBUG - the answer to query ['even', 'more', 'words'] is []
2019-11-05 20:36:55 - my_example - DEBUG - the answer to query ['тестовый', 'запрос'] is []
2019-11-05 20:36:55 - my_example - DEBUG - the answer to query ['кодировка', 'utf-8'] is []
2019-11-05 20:37:55 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x10f756b90>, dataset='../resources/wikipedia.sample', query_file=<_io.TextIOWrapper name='../resources/queries_utf8.txt' mode='r' encoding='utf-8'>)
2019-11-05 20:37:55 - my_example - INFO - start loading documents...
2019-11-05 20:37:56 - my_example - INFO - loading documents is complete
2019-11-05 20:37:56 - my_example - INFO - start building inverted index...
2019-11-05 20:38:03 - my_example - INFO - inverted index is ready for queries
2019-11-10 23:43:36 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7fd28c4633b0>, dataset='/path/to/dataset', output='/path/to/inverted.index')
2019-11-10 23:44:31 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7fcd2f3453b0>, dataset='resources/wikipedia_sample', output='inverted_index/inverted.index')
2019-11-10 23:46:51 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7f4f5eec0830>, dataset='resources/wikipedia_sample', index='inverted_index/inverted.index', query_file=<_io.TextIOWrapper name='resources/queries.txt' mode='r' encoding='utf-8'>)
2019-11-10 23:46:54 - my_example - DEBUG - the answer to query ['two', 'words'] is [2052, 2053, 4100, 8199, 8203, 8205, 8214, 25, 8220, 2076, 4124, 8222, 2082, 8227, 6182, 2088, 8237, 8240, 6195, 2100, 4149, 8243, 2104, 8249, 6210, 4163, 2116, 6216, 6220, 2130, 4179, 6226, 8276, 8280, 4188, 6237, 8295, 2154, 8302, 8305, 2162, 4210, 8311, 2176, 4224, 4227, 2187, 6291, 8339, 8340, 4246, 4251, 2204, 8351, 4257, 2217, 6315, 6140, 2221, 6321, 8375, 6328, 2234, 6330, 4285, 6336, 8387, 6340, 4294, 6343, 4298, 2251, 6347, 8400, 6355, 4314, 4315, 4318, 4320, 4321, 4326, 4327, 4333, 8439, 4348, 2303, 4359, 4363, 4364, 8459, 8465, 8468, 4379, 2333, 4382, 8478, 290, 4386, 4388, 4390, 8487, 2348, 8494, 4400, 305, 6449, 307, 6459, 6462, 2371, 8520, 8527, 336, 8531, 8533, 4449, 8547, 4453, 6501, 4457, 4458, 2411, 4468, 4472, 8573, 8574, 6533, 8582, 6546, 4503, 4506, 4507, 8612, 4524, 4531, 8630, 6589, 2494, 4542, 4543, 4545, 8645, 2510, 8654, 4565, 4566, 6613, 6621, 4575, 6623, 4583, 6631, 6643, 8702, 4615, 8716, 6677, 8730, 8731, 2593, 2594, 4647, 6698, 8751, 2608, 8753, 4660, 6710, 8758, 4667, 4668, 573, 8767, 4674, 6728, 8781, 8783, 4688, 594, 8786, 597, 4693, 599, 8795, 8796, 4702, 6752, 6753, 6759, 4717, 2671, 2673, 628, 640, 8832, 8833, 6793, 651, 4748, 8843, 6799, 657, 2705, 662, 6806, 664, 8855, 6811, 670, 4768, 677, 6827, 2736, 690, 8886, 4792, 700, 4800, 6854, 2761, 4810, 6865, 4820, 6878, 2784, 4833, 738, 2786, 740, 746, 4856, 2813, 4862, 8957, 8958, 4865, 775, 2824, 4871, 6920, 8968, 8971, 8973, 784, 2834, 4886, 4887, 8987, 800, 803, 2851, 9002, 2861, 4911, 824, 825, 9021, 9023, 4934, 9032, 6985, 2890, 843, 844, 4941, 848, 849, 4944, 852, 854, 4950, 4953, 2906, 872, 877, 4973, 887, 888, 2940, 898, 7043, 7045, 2952, 909, 7053, 9105, 914, 7066, 5020, 929, 7077, 5030, 5033, 5034, 5035, 2992, 5040, 9137, 5046, 951, 5048, 5049, 5050, 7105, 3012, 972, 9164, 980, 981, 983, 984, 3032, 986, 3038, 1000, 7144, 7148, 1006, 1017, 7165, 1023, 1028, 1029, 3080, 5131, 1038, 5134, 9235, 9239, 9248, 9253, 9256, 5170, 7218, 7222, 5176, 5177, 5178, 5185, 7235, 3144, 5194, 7242, 5211, 5216, 7264, 7270, 5224, 5225, 1130, 7272, 1132, 5244, 3198, 7294, 1152, 5253, 5254, 1160, 7304, 1164, 5261, 1171, 1177, 1178, 3225, 5278, 1183, 5282, 1196, 3246, 7342, 7344, 1201, 3259, 7355, 1214, 7366, 5326, 1241, 1242, 7388, 7390, 7401, 5363, 1273, 5370, 7426, 1288, 5391, 7442, 7445, 5401, 3355, 3356, 5407, 3363, 5416, 1325, 3375, 7473, 5431, 1338, 3390, 7489, 1346, 3395, 7502, 1361, 3409, 3410, 1367, 3416, 1369, 1373, 1374, 3427, 3430, 3436, 5489, 7538, 1395, 5499, 3454, 7558, 7565, 7566, 7573, 7578, 1436, 1437, 7580, 7583, 7586, 1451, 1453, 1456, 5561, 1466, 5573, 5574, 5576, 7627, 5584, 7635, 5592, 7660, 7663, 7672, 1530, 5626, 5630, 5639, 5641, 1546, 5643, 5644, 7689, 5648, 1558, 5654, 7706, 5664, 5665, 5667, 5689, 5693, 5703, 5704, 5715, 1620, 5716, 5729, 1640, 1645, 5743, 5751, 5759, 7816, 5771, 5781, 5785, 3738, 3747, 1701, 5822, 3778, 5830, 7890, 7891, 7921, 7922, 1784, 3833, 5882, 7931, 5884, 1790, 3850, 7946, 1806, 5902, 7952, 5905, 7954, 5909, 1814, 7964, 3870, 5921, 1834, 1835, 7978, 1837, 1842, 1844, 7989, 5942, 5943, 5945, 1859, 5955, 3914, 3933, 1890, 3942, 1897, 1902, 3954, 8060, 3968, 1921, 6019, 6021, 6024, 3978, 3986, 6035, 1944, 8088, 3995, 8091, 1950, 6046, 4001, 6051, 4010, 6059, 1967, 6066, 1980, 8125, 4031, 8127, 8128, 4035, 4041, 4050, 4052, 6100, 2006, 2011, 2018, 4068, 4069, 8169, 2029, 2030, 4077, 8176, 6130, 2037, 4092]
2019-11-10 23:46:54 - my_example - DEBUG - the answer to query ['even', 'more', 'words'] is [2052, 4100, 8199, 8203, 8205, 8214, 4124, 2082, 8227, 6182, 2088, 8237, 6195, 2100, 4149, 8243, 8249, 4163, 2116, 6216, 2130, 8280, 6237, 2154, 8302, 8305, 2162, 4210, 8311, 2176, 4224, 4227, 2187, 6291, 8339, 8340, 4246, 4251, 2204, 2217, 6315, 6140, 2226, 8375, 6328, 4285, 6340, 4294, 6343, 4298, 2251, 6352, 6355, 4314, 4318, 4320, 4321, 4333, 8439, 4348, 2303, 4359, 4363, 4364, 8465, 8468, 4379, 4382, 8478, 4386, 4388, 8487, 8494, 4400, 305, 6449, 307, 6462, 8520, 8527, 336, 8533, 4449, 8547, 4453, 6501, 4457, 4458, 2411, 4468, 4472, 8573, 6526, 8574, 6533, 6546, 4506, 4507, 4524, 4531, 8630, 4540, 6589, 2494, 4542, 4543, 4545, 8645, 2510, 8654, 6613, 6621, 4575, 6623, 4583, 6631, 8702, 4615, 8716, 8730, 8731, 2593, 2594, 4647, 6698, 2608, 4660, 6710, 4667, 4668, 573, 4674, 6728, 8781, 8783, 4688, 594, 8786, 4693, 599, 8795, 8796, 6753, 6759, 4717, 2671, 2673, 628, 640, 8832, 8833, 6793, 4748, 6799, 6806, 8855, 670, 4768, 677, 6827, 2736, 690, 8886, 4792, 700, 4800, 6854, 2761, 4810, 6865, 2784, 4833, 738, 2786, 746, 8958, 775, 2824, 4871, 6920, 8968, 8971, 8973, 784, 2834, 4886, 800, 803, 2851, 9002, 2861, 4911, 824, 825, 9021, 9023, 6985, 2890, 843, 844, 4941, 4942, 848, 849, 4944, 852, 854, 4950, 4953, 872, 887, 2940, 898, 7043, 7045, 909, 7053, 9105, 914, 5020, 7077, 5030, 5033, 5034, 2992, 5040, 9137, 5050, 3012, 972, 9164, 980, 981, 983, 984, 986, 3038, 1000, 7148, 1006, 1017, 1023, 1028, 1029, 5134, 9239, 7196, 9248, 1057, 9256, 5170, 7218, 7222, 5176, 5177, 5185, 7235, 3144, 5194, 7242, 5211, 5216, 7264, 7270, 5224, 5225, 1130, 7272, 5244, 3198, 7294, 5253, 5254, 7304, 1164, 5261, 1171, 1177, 1178, 3225, 5278, 1183, 5282, 1196, 7342, 7344, 1201, 7355, 1214, 5326, 1241, 1242, 7388, 7390, 7401, 5363, 1273, 7426, 1288, 5391, 7442, 7445, 5401, 3355, 3356, 3363, 5416, 3375, 1338, 3390, 7489, 1346, 3395, 7502, 3409, 3410, 1367, 3416, 3427, 3430, 1383, 3436, 5489, 1395, 3454, 7565, 7566, 7578, 1436, 1437, 7580, 7586, 1451, 1453, 1456, 5561, 1466, 7610, 5573, 5574, 5576, 7627, 5584, 7635, 5592, 7660, 7672, 1530, 5626, 5630, 5641, 7689, 5648, 1558, 5654, 5664, 5665, 5667, 5689, 7737, 5693, 5703, 5704, 1614, 5715, 5716, 5729, 1640, 1645, 5751, 7816, 5771, 5781, 5785, 3738, 1701, 5822, 3778, 5830, 7891, 7921, 7922, 1784, 3833, 5882, 7931, 5884, 3850, 7946, 1806, 5902, 7952, 5905, 7954, 1814, 7964, 3870, 1834, 7978, 1842, 1844, 7989, 5942, 5943, 5945, 3914, 3933, 1890, 1897, 1902, 8060, 3968, 1921, 6019, 6021, 6024, 3978, 3986, 6035, 8088, 3995, 8091, 3997, 1950, 6046, 6051, 4010, 6059, 6066, 1980, 8128, 4035, 4041, 4050, 2006, 2011, 4068, 8169, 2029, 2030, 4077, 8176, 6130, 2039, 4092]
2019-11-10 23:47:36 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7fa73860e830>, dataset='resources/wikipedia_sample', index='inverted_index/inverted.index', query_file=<_io.TextIOWrapper name='resources/queries_cp1251.txt' mode='r' encoding='cp1251'>)
2019-11-10 23:47:40 - my_example - DEBUG - the answer to query ['two', 'words'] is [2052, 2053, 4100, 8199, 8203, 8205, 8214, 25, 8220, 2076, 4124, 8222, 2082, 8227, 6182, 2088, 8237, 8240, 6195, 2100, 4149, 8243, 2104, 8249, 6210, 4163, 2116, 6216, 6220, 2130, 4179, 6226, 8276, 8280, 4188, 6237, 8295, 2154, 8302, 8305, 2162, 4210, 8311, 2176, 4224, 4227, 2187, 6291, 8339, 8340, 4246, 4251, 2204, 8351, 4257, 2217, 6315, 6140, 2221, 6321, 8375, 6328, 2234, 6330, 4285, 6336, 8387, 6340, 4294, 6343, 4298, 2251, 6347, 8400, 6355, 4314, 4315, 4318, 4320, 4321, 4326, 4327, 4333, 8439, 4348, 2303, 4359, 4363, 4364, 8459, 8465, 8468, 4379, 2333, 4382, 8478, 290, 4386, 4388, 4390, 8487, 2348, 8494, 4400, 305, 6449, 307, 6459, 6462, 2371, 8520, 8527, 336, 8531, 8533, 4449, 8547, 4453, 6501, 4457, 4458, 2411, 4468, 4472, 8573, 8574, 6533, 8582, 6546, 4503, 4506, 4507, 8612, 4524, 4531, 8630, 6589, 2494, 4542, 4543, 4545, 8645, 2510, 8654, 4565, 4566, 6613, 6621, 4575, 6623, 4583, 6631, 6643, 8702, 4615, 8716, 6677, 8730, 8731, 2593, 2594, 4647, 6698, 8751, 2608, 8753, 4660, 6710, 8758, 4667, 4668, 573, 8767, 4674, 6728, 8781, 8783, 4688, 594, 8786, 597, 4693, 599, 8795, 8796, 4702, 6752, 6753, 6759, 4717, 2671, 2673, 628, 640, 8832, 8833, 6793, 651, 4748, 8843, 6799, 657, 2705, 662, 6806, 664, 8855, 6811, 670, 4768, 677, 6827, 2736, 690, 8886, 4792, 700, 4800, 6854, 2761, 4810, 6865, 4820, 6878, 2784, 4833, 738, 2786, 740, 746, 4856, 2813, 4862, 8957, 8958, 4865, 775, 2824, 4871, 6920, 8968, 8971, 8973, 784, 2834, 4886, 4887, 8987, 800, 803, 2851, 9002, 2861, 4911, 824, 825, 9021, 9023, 4934, 9032, 6985, 2890, 843, 844, 4941, 848, 849, 4944, 852, 854, 4950, 4953, 2906, 872, 877, 4973, 887, 888, 2940, 898, 7043, 7045, 2952, 909, 7053, 9105, 914, 7066, 5020, 929, 7077, 5030, 5033, 5034, 5035, 2992, 5040, 9137, 5046, 951, 5048, 5049, 5050, 7105, 3012, 972, 9164, 980, 981, 983, 984, 3032, 986, 3038, 1000, 7144, 7148, 1006, 1017, 7165, 1023, 1028, 1029, 3080, 5131, 1038, 5134, 9235, 9239, 9248, 9253, 9256, 5170, 7218, 7222, 5176, 5177, 5178, 5185, 7235, 3144, 5194, 7242, 5211, 5216, 7264, 7270, 5224, 5225, 1130, 7272, 1132, 5244, 3198, 7294, 1152, 5253, 5254, 1160, 7304, 1164, 5261, 1171, 1177, 1178, 3225, 5278, 1183, 5282, 1196, 3246, 7342, 7344, 1201, 3259, 7355, 1214, 7366, 5326, 1241, 1242, 7388, 7390, 7401, 5363, 1273, 5370, 7426, 1288, 5391, 7442, 7445, 5401, 3355, 3356, 5407, 3363, 5416, 1325, 3375, 7473, 5431, 1338, 3390, 7489, 1346, 3395, 7502, 1361, 3409, 3410, 1367, 3416, 1369, 1373, 1374, 3427, 3430, 3436, 5489, 7538, 1395, 5499, 3454, 7558, 7565, 7566, 7573, 7578, 1436, 1437, 7580, 7583, 7586, 1451, 1453, 1456, 5561, 1466, 5573, 5574, 5576, 7627, 5584, 7635, 5592, 7660, 7663, 7672, 1530, 5626, 5630, 5639, 5641, 1546, 5643, 5644, 7689, 5648, 1558, 5654, 7706, 5664, 5665, 5667, 5689, 5693, 5703, 5704, 5715, 1620, 5716, 5729, 1640, 1645, 5743, 5751, 5759, 7816, 5771, 5781, 5785, 3738, 3747, 1701, 5822, 3778, 5830, 7890, 7891, 7921, 7922, 1784, 3833, 5882, 7931, 5884, 1790, 3850, 7946, 1806, 5902, 7952, 5905, 7954, 5909, 1814, 7964, 3870, 5921, 1834, 1835, 7978, 1837, 1842, 1844, 7989, 5942, 5943, 5945, 1859, 5955, 3914, 3933, 1890, 3942, 1897, 1902, 3954, 8060, 3968, 1921, 6019, 6021, 6024, 3978, 3986, 6035, 1944, 8088, 3995, 8091, 1950, 6046, 4001, 6051, 4010, 6059, 1967, 6066, 1980, 8125, 4031, 8127, 8128, 4035, 4041, 4050, 4052, 6100, 2006, 2011, 2018, 4068, 4069, 8169, 2029, 2030, 4077, 8176, 6130, 2037, 4092]
2019-11-10 23:47:40 - my_example - DEBUG - the answer to query ['even', 'more', 'words'] is [2052, 4100, 8199, 8203, 8205, 8214, 4124, 2082, 8227, 6182, 2088, 8237, 6195, 2100, 4149, 8243, 8249, 4163, 2116, 6216, 2130, 8280, 6237, 2154, 8302, 8305, 2162, 4210, 8311, 2176, 4224, 4227, 2187, 6291, 8339, 8340, 4246, 4251, 2204, 2217, 6315, 6140, 2226, 8375, 6328, 4285, 6340, 4294, 6343, 4298, 2251, 6352, 6355, 4314, 4318, 4320, 4321, 4333, 8439, 4348, 2303, 4359, 4363, 4364, 8465, 8468, 4379, 4382, 8478, 4386, 4388, 8487, 8494, 4400, 305, 6449, 307, 6462, 8520, 8527, 336, 8533, 4449, 8547, 4453, 6501, 4457, 4458, 2411, 4468, 4472, 8573, 6526, 8574, 6533, 6546, 4506, 4507, 4524, 4531, 8630, 4540, 6589, 2494, 4542, 4543, 4545, 8645, 2510, 8654, 6613, 6621, 4575, 6623, 4583, 6631, 8702, 4615, 8716, 8730, 8731, 2593, 2594, 4647, 6698, 2608, 4660, 6710, 4667, 4668, 573, 4674, 6728, 8781, 8783, 4688, 594, 8786, 4693, 599, 8795, 8796, 6753, 6759, 4717, 2671, 2673, 628, 640, 8832, 8833, 6793, 4748, 6799, 6806, 8855, 670, 4768, 677, 6827, 2736, 690, 8886, 4792, 700, 4800, 6854, 2761, 4810, 6865, 2784, 4833, 738, 2786, 746, 8958, 775, 2824, 4871, 6920, 8968, 8971, 8973, 784, 2834, 4886, 800, 803, 2851, 9002, 2861, 4911, 824, 825, 9021, 9023, 6985, 2890, 843, 844, 4941, 4942, 848, 849, 4944, 852, 854, 4950, 4953, 872, 887, 2940, 898, 7043, 7045, 909, 7053, 9105, 914, 5020, 7077, 5030, 5033, 5034, 2992, 5040, 9137, 5050, 3012, 972, 9164, 980, 981, 983, 984, 986, 3038, 1000, 7148, 1006, 1017, 1023, 1028, 1029, 5134, 9239, 7196, 9248, 1057, 9256, 5170, 7218, 7222, 5176, 5177, 5185, 7235, 3144, 5194, 7242, 5211, 5216, 7264, 7270, 5224, 5225, 1130, 7272, 5244, 3198, 7294, 5253, 5254, 7304, 1164, 5261, 1171, 1177, 1178, 3225, 5278, 1183, 5282, 1196, 7342, 7344, 1201, 7355, 1214, 5326, 1241, 1242, 7388, 7390, 7401, 5363, 1273, 7426, 1288, 5391, 7442, 7445, 5401, 3355, 3356, 3363, 5416, 3375, 1338, 3390, 7489, 1346, 3395, 7502, 3409, 3410, 1367, 3416, 3427, 3430, 1383, 3436, 5489, 1395, 3454, 7565, 7566, 7578, 1436, 1437, 7580, 7586, 1451, 1453, 1456, 5561, 1466, 7610, 5573, 5574, 5576, 7627, 5584, 7635, 5592, 7660, 7672, 1530, 5626, 5630, 5641, 7689, 5648, 1558, 5654, 5664, 5665, 5667, 5689, 7737, 5693, 5703, 5704, 1614, 5715, 5716, 5729, 1640, 1645, 5751, 7816, 5771, 5781, 5785, 3738, 1701, 5822, 3778, 5830, 7891, 7921, 7922, 1784, 3833, 5882, 7931, 5884, 3850, 7946, 1806, 5902, 7952, 5905, 7954, 1814, 7964, 3870, 1834, 7978, 1842, 1844, 7989, 5942, 5943, 5945, 3914, 3933, 1890, 1897, 1902, 8060, 3968, 1921, 6019, 6021, 6024, 3978, 3986, 6035, 8088, 3995, 8091, 3997, 1950, 6046, 6051, 4010, 6059, 6066, 1980, 8128, 4035, 4041, 4050, 2006, 2011, 4068, 8169, 2029, 2030, 4077, 8176, 6130, 2039, 4092]
2019-11-10 23:47:40 - my_example - DEBUG - the answer to query ['тестовый', 'запрос'] is []
2019-11-10 23:47:40 - my_example - DEBUG - the answer to query ['кодировка', 'cp1251'] is []
2019-11-10 23:52:58 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7fe13c2d47a0>, dataset='resources/wikipedia_sample', index='inverted_index/inverted.index', query_file=<_io.TextIOWrapper name='resources/queries_cp1251.txt' mode='r' encoding='cp1251'>)
2019-11-10 23:54:54 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7f5a7f06f7a0>, dataset='resources/wikipedia_sample', index='inverted_index/inverted.index', query_file=<_io.TextIOWrapper name='resources/queries_cp1251.txt' mode='r' encoding='cp1251'>)
2019-11-10 23:54:58 - my_example - DEBUG - the answer to query ['two', 'words'] is [2052, 2053, 4100, 8199, 8203, 8205, 8214, 25, 8220, 2076, 4124, 8222, 2082, 8227, 6182, 2088, 8237, 8240, 6195, 2100, 4149, 8243, 2104, 8249, 6210, 4163, 2116, 6216, 6220, 2130, 4179, 6226, 8276, 8280, 4188, 6237, 8295, 2154, 8302, 8305, 2162, 4210, 8311, 2176, 4224, 4227, 2187, 6291, 8339, 8340, 4246, 4251, 2204, 8351, 4257, 2217, 6315, 6140, 2221, 6321, 8375, 6328, 2234, 6330, 4285, 6336, 8387, 6340, 4294, 6343, 4298, 2251, 6347, 8400, 6355, 4314, 4315, 4318, 4320, 4321, 4326, 4327, 4333, 8439, 4348, 2303, 4359, 4363, 4364, 8459, 8465, 8468, 4379, 2333, 4382, 8478, 290, 4386, 4388, 4390, 8487, 2348, 8494, 4400, 305, 6449, 307, 6459, 6462, 2371, 8520, 8527, 336, 8531, 8533, 4449, 8547, 4453, 6501, 4457, 4458, 2411, 4468, 4472, 8573, 8574, 6533, 8582, 6546, 4503, 4506, 4507, 8612, 4524, 4531, 8630, 6589, 2494, 4542, 4543, 4545, 8645, 2510, 8654, 4565, 4566, 6613, 6621, 4575, 6623, 4583, 6631, 6643, 8702, 4615, 8716, 6677, 8730, 8731, 2593, 2594, 4647, 6698, 8751, 2608, 8753, 4660, 6710, 8758, 4667, 4668, 573, 8767, 4674, 6728, 8781, 8783, 4688, 594, 8786, 597, 4693, 599, 8795, 8796, 4702, 6752, 6753, 6759, 4717, 2671, 2673, 628, 640, 8832, 8833, 6793, 651, 4748, 8843, 6799, 657, 2705, 662, 6806, 664, 8855, 6811, 670, 4768, 677, 6827, 2736, 690, 8886, 4792, 700, 4800, 6854, 2761, 4810, 6865, 4820, 6878, 2784, 4833, 738, 2786, 740, 746, 4856, 2813, 4862, 8957, 8958, 4865, 775, 2824, 4871, 6920, 8968, 8971, 8973, 784, 2834, 4886, 4887, 8987, 800, 803, 2851, 9002, 2861, 4911, 824, 825, 9021, 9023, 4934, 9032, 6985, 2890, 843, 844, 4941, 848, 849, 4944, 852, 854, 4950, 4953, 2906, 872, 877, 4973, 887, 888, 2940, 898, 7043, 7045, 2952, 909, 7053, 9105, 914, 7066, 5020, 929, 7077, 5030, 5033, 5034, 5035, 2992, 5040, 9137, 5046, 951, 5048, 5049, 5050, 7105, 3012, 972, 9164, 980, 981, 983, 984, 3032, 986, 3038, 1000, 7144, 7148, 1006, 1017, 7165, 1023, 1028, 1029, 3080, 5131, 1038, 5134, 9235, 9239, 9248, 9253, 9256, 5170, 7218, 7222, 5176, 5177, 5178, 5185, 7235, 3144, 5194, 7242, 5211, 5216, 7264, 7270, 5224, 5225, 1130, 7272, 1132, 5244, 3198, 7294, 1152, 5253, 5254, 1160, 7304, 1164, 5261, 1171, 1177, 1178, 3225, 5278, 1183, 5282, 1196, 3246, 7342, 7344, 1201, 3259, 7355, 1214, 7366, 5326, 1241, 1242, 7388, 7390, 7401, 5363, 1273, 5370, 7426, 1288, 5391, 7442, 7445, 5401, 3355, 3356, 5407, 3363, 5416, 1325, 3375, 7473, 5431, 1338, 3390, 7489, 1346, 3395, 7502, 1361, 3409, 3410, 1367, 3416, 1369, 1373, 1374, 3427, 3430, 3436, 5489, 7538, 1395, 5499, 3454, 7558, 7565, 7566, 7573, 7578, 1436, 1437, 7580, 7583, 7586, 1451, 1453, 1456, 5561, 1466, 5573, 5574, 5576, 7627, 5584, 7635, 5592, 7660, 7663, 7672, 1530, 5626, 5630, 5639, 5641, 1546, 5643, 5644, 7689, 5648, 1558, 5654, 7706, 5664, 5665, 5667, 5689, 5693, 5703, 5704, 5715, 1620, 5716, 5729, 1640, 1645, 5743, 5751, 5759, 7816, 5771, 5781, 5785, 3738, 3747, 1701, 5822, 3778, 5830, 7890, 7891, 7921, 7922, 1784, 3833, 5882, 7931, 5884, 1790, 3850, 7946, 1806, 5902, 7952, 5905, 7954, 5909, 1814, 7964, 3870, 5921, 1834, 1835, 7978, 1837, 1842, 1844, 7989, 5942, 5943, 5945, 1859, 5955, 3914, 3933, 1890, 3942, 1897, 1902, 3954, 8060, 3968, 1921, 6019, 6021, 6024, 3978, 3986, 6035, 1944, 8088, 3995, 8091, 1950, 6046, 4001, 6051, 4010, 6059, 1967, 6066, 1980, 8125, 4031, 8127, 8128, 4035, 4041, 4050, 4052, 6100, 2006, 2011, 2018, 4068, 4069, 8169, 2029, 2030, 4077, 8176, 6130, 2037, 4092]
2019-11-10 23:54:58 - my_example - DEBUG - the answer to query ['even', 'more', 'words'] is [2052, 4100, 8199, 8203, 8205, 8214, 4124, 2082, 8227, 6182, 2088, 8237, 6195, 2100, 4149, 8243, 8249, 4163, 2116, 6216, 2130, 8280, 6237, 2154, 8302, 8305, 2162, 4210, 8311, 2176, 4224, 4227, 2187, 6291, 8339, 8340, 4246, 4251, 2204, 2217, 6315, 6140, 2226, 8375, 6328, 4285, 6340, 4294, 6343, 4298, 2251, 6352, 6355, 4314, 4318, 4320, 4321, 4333, 8439, 4348, 2303, 4359, 4363, 4364, 8465, 8468, 4379, 4382, 8478, 4386, 4388, 8487, 8494, 4400, 305, 6449, 307, 6462, 8520, 8527, 336, 8533, 4449, 8547, 4453, 6501, 4457, 4458, 2411, 4468, 4472, 8573, 6526, 8574, 6533, 6546, 4506, 4507, 4524, 4531, 8630, 4540, 6589, 2494, 4542, 4543, 4545, 8645, 2510, 8654, 6613, 6621, 4575, 6623, 4583, 6631, 8702, 4615, 8716, 8730, 8731, 2593, 2594, 4647, 6698, 2608, 4660, 6710, 4667, 4668, 573, 4674, 6728, 8781, 8783, 4688, 594, 8786, 4693, 599, 8795, 8796, 6753, 6759, 4717, 2671, 2673, 628, 640, 8832, 8833, 6793, 4748, 6799, 6806, 8855, 670, 4768, 677, 6827, 2736, 690, 8886, 4792, 700, 4800, 6854, 2761, 4810, 6865, 2784, 4833, 738, 2786, 746, 8958, 775, 2824, 4871, 6920, 8968, 8971, 8973, 784, 2834, 4886, 800, 803, 2851, 9002, 2861, 4911, 824, 825, 9021, 9023, 6985, 2890, 843, 844, 4941, 4942, 848, 849, 4944, 852, 854, 4950, 4953, 872, 887, 2940, 898, 7043, 7045, 909, 7053, 9105, 914, 5020, 7077, 5030, 5033, 5034, 2992, 5040, 9137, 5050, 3012, 972, 9164, 980, 981, 983, 984, 986, 3038, 1000, 7148, 1006, 1017, 1023, 1028, 1029, 5134, 9239, 7196, 9248, 1057, 9256, 5170, 7218, 7222, 5176, 5177, 5185, 7235, 3144, 5194, 7242, 5211, 5216, 7264, 7270, 5224, 5225, 1130, 7272, 5244, 3198, 7294, 5253, 5254, 7304, 1164, 5261, 1171, 1177, 1178, 3225, 5278, 1183, 5282, 1196, 7342, 7344, 1201, 7355, 1214, 5326, 1241, 1242, 7388, 7390, 7401, 5363, 1273, 7426, 1288, 5391, 7442, 7445, 5401, 3355, 3356, 3363, 5416, 3375, 1338, 3390, 7489, 1346, 3395, 7502, 3409, 3410, 1367, 3416, 3427, 3430, 1383, 3436, 5489, 1395, 3454, 7565, 7566, 7578, 1436, 1437, 7580, 7586, 1451, 1453, 1456, 5561, 1466, 7610, 5573, 5574, 5576, 7627, 5584, 7635, 5592, 7660, 7672, 1530, 5626, 5630, 5641, 7689, 5648, 1558, 5654, 5664, 5665, 5667, 5689, 7737, 5693, 5703, 5704, 1614, 5715, 5716, 5729, 1640, 1645, 5751, 7816, 5771, 5781, 5785, 3738, 1701, 5822, 3778, 5830, 7891, 7921, 7922, 1784, 3833, 5882, 7931, 5884, 3850, 7946, 1806, 5902, 7952, 5905, 7954, 1814, 7964, 3870, 1834, 7978, 1842, 1844, 7989, 5942, 5943, 5945, 3914, 3933, 1890, 1897, 1902, 8060, 3968, 1921, 6019, 6021, 6024, 3978, 3986, 6035, 8088, 3995, 8091, 3997, 1950, 6046, 6051, 4010, 6059, 6066, 1980, 8128, 4035, 4041, 4050, 2006, 2011, 4068, 8169, 2029, 2030, 4077, 8176, 6130, 2039, 4092]
2019-11-10 23:54:58 - my_example - DEBUG - the answer to query ['тестовый', 'запрос'] is []
2019-11-10 23:54:58 - my_example - DEBUG - the answer to query ['кодировка', 'cp1251'] is []
2019-11-10 23:57:21 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7f3ef33bf320>, dataset='resources/wikipedia_sample', output='inverted_index/inverted_koi8r_json.index')
2019-11-10 23:57:21 - my_example - DEBUG - start loading documents...
2019-11-10 23:57:22 - my_example - DEBUG - loading documents is complete
2019-11-10 23:57:22 - my_example - DEBUG - start building inverted index...
2019-11-10 23:57:36 - my_example - DEBUG - inverted index is ready for queries
2019-11-10 23:58:42 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7fc72145f7a0>, dataset='resources/wikipedia_sample', index='inverted_index/inverted_koi8r_json.index', query_file=<_io.TextIOWrapper name='resources/queries_cp1251.txt' mode='r' encoding='cp1251'>)
2019-11-10 23:58:45 - my_example - DEBUG - the answer to query ['two', 'words'] is [2052, 2053, 4100, 8199, 8203, 8205, 8214, 25, 8220, 2076, 4124, 8222, 2082, 8227, 6182, 2088, 8237, 8240, 6195, 2100, 4149, 8243, 2104, 8249, 6210, 4163, 2116, 6216, 6220, 2130, 4179, 6226, 8276, 8280, 4188, 6237, 8295, 2154, 8302, 8305, 2162, 4210, 8311, 2176, 4224, 4227, 2187, 6291, 8339, 8340, 4246, 4251, 2204, 8351, 4257, 2217, 6315, 6140, 2221, 6321, 8375, 6328, 2234, 6330, 4285, 6336, 8387, 6340, 4294, 6343, 4298, 2251, 6347, 8400, 6355, 4314, 4315, 4318, 4320, 4321, 4326, 4327, 4333, 8439, 4348, 2303, 4359, 4363, 4364, 8459, 8465, 8468, 4379, 2333, 4382, 8478, 290, 4386, 4388, 4390, 8487, 2348, 8494, 4400, 305, 6449, 307, 6459, 6462, 2371, 8520, 8527, 336, 8531, 8533, 4449, 8547, 4453, 6501, 4457, 4458, 2411, 4468, 4472, 8573, 8574, 6533, 8582, 6546, 4503, 4506, 4507, 8612, 4524, 4531, 8630, 6589, 2494, 4542, 4543, 4545, 8645, 2510, 8654, 4565, 4566, 6613, 6621, 4575, 6623, 4583, 6631, 6643, 8702, 4615, 8716, 6677, 8730, 8731, 2593, 2594, 4647, 6698, 8751, 2608, 8753, 4660, 6710, 8758, 4667, 4668, 573, 8767, 4674, 6728, 8781, 8783, 4688, 594, 8786, 597, 4693, 599, 8795, 8796, 4702, 6752, 6753, 6759, 4717, 2671, 2673, 628, 640, 8832, 8833, 6793, 651, 4748, 8843, 6799, 657, 2705, 662, 6806, 664, 8855, 6811, 670, 4768, 677, 6827, 2736, 690, 8886, 4792, 700, 4800, 6854, 2761, 4810, 6865, 4820, 6878, 2784, 4833, 738, 2786, 740, 746, 4856, 2813, 4862, 8957, 8958, 4865, 775, 2824, 4871, 6920, 8968, 8971, 8973, 784, 2834, 4886, 4887, 8987, 800, 803, 2851, 9002, 2861, 4911, 824, 825, 9021, 9023, 4934, 9032, 6985, 2890, 843, 844, 4941, 848, 849, 4944, 852, 854, 4950, 4953, 2906, 872, 877, 4973, 887, 888, 2940, 898, 7043, 7045, 2952, 909, 7053, 9105, 914, 7066, 5020, 929, 7077, 5030, 5033, 5034, 5035, 2992, 5040, 9137, 5046, 951, 5048, 5049, 5050, 7105, 3012, 972, 9164, 980, 981, 983, 984, 3032, 986, 3038, 1000, 7144, 7148, 1006, 1017, 7165, 1023, 1028, 1029, 3080, 5131, 1038, 5134, 9235, 9239, 9248, 9253, 9256, 5170, 7218, 7222, 5176, 5177, 5178, 5185, 7235, 3144, 5194, 7242, 5211, 5216, 7264, 7270, 5224, 5225, 1130, 7272, 1132, 5244, 3198, 7294, 1152, 5253, 5254, 1160, 7304, 1164, 5261, 1171, 1177, 1178, 3225, 5278, 1183, 5282, 1196, 3246, 7342, 7344, 1201, 3259, 7355, 1214, 7366, 5326, 1241, 1242, 7388, 7390, 7401, 5363, 1273, 5370, 7426, 1288, 5391, 7442, 7445, 5401, 3355, 3356, 5407, 3363, 5416, 1325, 3375, 7473, 5431, 1338, 3390, 7489, 1346, 3395, 7502, 1361, 3409, 3410, 1367, 3416, 1369, 1373, 1374, 3427, 3430, 3436, 5489, 7538, 1395, 5499, 3454, 7558, 7565, 7566, 7573, 7578, 1436, 1437, 7580, 7583, 7586, 1451, 1453, 1456, 5561, 1466, 5573, 5574, 5576, 7627, 5584, 7635, 5592, 7660, 7663, 7672, 1530, 5626, 5630, 5639, 5641, 1546, 5643, 5644, 7689, 5648, 1558, 5654, 7706, 5664, 5665, 5667, 5689, 5693, 5703, 5704, 5715, 1620, 5716, 5729, 1640, 1645, 5743, 5751, 5759, 7816, 5771, 5781, 5785, 3738, 3747, 1701, 5822, 3778, 5830, 7890, 7891, 7921, 7922, 1784, 3833, 5882, 7931, 5884, 1790, 3850, 7946, 1806, 5902, 7952, 5905, 7954, 5909, 1814, 7964, 3870, 5921, 1834, 1835, 7978, 1837, 1842, 1844, 7989, 5942, 5943, 5945, 1859, 5955, 3914, 3933, 1890, 3942, 1897, 1902, 3954, 8060, 3968, 1921, 6019, 6021, 6024, 3978, 3986, 6035, 1944, 8088, 3995, 8091, 1950, 6046, 4001, 6051, 4010, 6059, 1967, 6066, 1980, 8125, 4031, 8127, 8128, 4035, 4041, 4050, 4052, 6100, 2006, 2011, 2018, 4068, 4069, 8169, 2029, 2030, 4077, 8176, 6130, 2037, 4092]
2019-11-10 23:58:45 - my_example - DEBUG - the answer to query ['even', 'more', 'words'] is [2052, 4100, 8199, 8203, 8205, 8214, 4124, 2082, 8227, 6182, 2088, 8237, 6195, 2100, 4149, 8243, 8249, 4163, 2116, 6216, 2130, 8280, 6237, 2154, 8302, 8305, 2162, 4210, 8311, 2176, 4224, 4227, 2187, 6291, 8339, 8340, 4246, 4251, 2204, 2217, 6315, 6140, 2226, 8375, 6328, 4285, 6340, 4294, 6343, 4298, 2251, 6352, 6355, 4314, 4318, 4320, 4321, 4333, 8439, 4348, 2303, 4359, 4363, 4364, 8465, 8468, 4379, 4382, 8478, 4386, 4388, 8487, 8494, 4400, 305, 6449, 307, 6462, 8520, 8527, 336, 8533, 4449, 8547, 4453, 6501, 4457, 4458, 2411, 4468, 4472, 8573, 6526, 8574, 6533, 6546, 4506, 4507, 4524, 4531, 8630, 4540, 6589, 2494, 4542, 4543, 4545, 8645, 2510, 8654, 6613, 6621, 4575, 6623, 4583, 6631, 8702, 4615, 8716, 8730, 8731, 2593, 2594, 4647, 6698, 2608, 4660, 6710, 4667, 4668, 573, 4674, 6728, 8781, 8783, 4688, 594, 8786, 4693, 599, 8795, 8796, 6753, 6759, 4717, 2671, 2673, 628, 640, 8832, 8833, 6793, 4748, 6799, 6806, 8855, 670, 4768, 677, 6827, 2736, 690, 8886, 4792, 700, 4800, 6854, 2761, 4810, 6865, 2784, 4833, 738, 2786, 746, 8958, 775, 2824, 4871, 6920, 8968, 8971, 8973, 784, 2834, 4886, 800, 803, 2851, 9002, 2861, 4911, 824, 825, 9021, 9023, 6985, 2890, 843, 844, 4941, 4942, 848, 849, 4944, 852, 854, 4950, 4953, 872, 887, 2940, 898, 7043, 7045, 909, 7053, 9105, 914, 5020, 7077, 5030, 5033, 5034, 2992, 5040, 9137, 5050, 3012, 972, 9164, 980, 981, 983, 984, 986, 3038, 1000, 7148, 1006, 1017, 1023, 1028, 1029, 5134, 9239, 7196, 9248, 1057, 9256, 5170, 7218, 7222, 5176, 5177, 5185, 7235, 3144, 5194, 7242, 5211, 5216, 7264, 7270, 5224, 5225, 1130, 7272, 5244, 3198, 7294, 5253, 5254, 7304, 1164, 5261, 1171, 1177, 1178, 3225, 5278, 1183, 5282, 1196, 7342, 7344, 1201, 7355, 1214, 5326, 1241, 1242, 7388, 7390, 7401, 5363, 1273, 7426, 1288, 5391, 7442, 7445, 5401, 3355, 3356, 3363, 5416, 3375, 1338, 3390, 7489, 1346, 3395, 7502, 3409, 3410, 1367, 3416, 3427, 3430, 1383, 3436, 5489, 1395, 3454, 7565, 7566, 7578, 1436, 1437, 7580, 7586, 1451, 1453, 1456, 5561, 1466, 7610, 5573, 5574, 5576, 7627, 5584, 7635, 5592, 7660, 7672, 1530, 5626, 5630, 5641, 7689, 5648, 1558, 5654, 5664, 5665, 5667, 5689, 7737, 5693, 5703, 5704, 1614, 5715, 5716, 5729, 1640, 1645, 5751, 7816, 5771, 5781, 5785, 3738, 1701, 5822, 3778, 5830, 7891, 7921, 7922, 1784, 3833, 5882, 7931, 5884, 3850, 7946, 1806, 5902, 7952, 5905, 7954, 1814, 7964, 3870, 1834, 7978, 1842, 1844, 7989, 5942, 5943, 5945, 3914, 3933, 1890, 1897, 1902, 8060, 3968, 1921, 6019, 6021, 6024, 3978, 3986, 6035, 8088, 3995, 8091, 3997, 1950, 6046, 6051, 4010, 6059, 6066, 1980, 8128, 4035, 4041, 4050, 2006, 2011, 4068, 8169, 2029, 2030, 4077, 8176, 6130, 2039, 4092]
2019-11-10 23:58:45 - my_example - DEBUG - the answer to query ['тестовый', 'запрос'] is []
2019-11-10 23:58:45 - my_example - DEBUG - the answer to query ['кодировка', 'cp1251'] is []
2019-11-11 00:03:11 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7f1b0f622320>, dataset='resources/wikipedia_sample', output='inverted_index/inverted_koi8r_json.index')
2019-11-11 00:03:11 - my_example - DEBUG - start loading documents...
2019-11-11 00:03:11 - my_example - DEBUG - loading documents is complete
2019-11-11 00:03:11 - my_example - DEBUG - start building inverted index...
2019-11-11 00:03:26 - my_example - DEBUG - inverted index is ready
2019-11-11 00:03:26 - my_example - DEBUG - start dump to inverted_index/inverted_koi8r_json.index
2019-11-11 00:04:01 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7fa130c44320>, dataset='resources/wikipedia_sample', output='inverted_index/inverted_koi8r_json.index')
2019-11-11 00:04:01 - my_example - DEBUG - start loading documents...
2019-11-11 00:04:02 - my_example - DEBUG - loading documents is complete
2019-11-11 00:04:02 - my_example - DEBUG - start building inverted index...
2019-11-11 00:04:16 - my_example - DEBUG - inverted index is ready
2019-11-11 00:04:16 - my_example - DEBUG - start dump to inverted_index/inverted_koi8r_json.index
2019-11-11 00:05:17 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7f2e6f792320>, dataset='resources/wikipedia_sample', output='inverted_index/inverted_koi8r_json.index')
2019-11-11 00:05:17 - my_example - DEBUG - start loading documents...
2019-11-11 00:05:17 - my_example - DEBUG - loading documents is complete
2019-11-11 00:05:17 - my_example - DEBUG - start building inverted index...
2019-11-11 00:05:32 - my_example - DEBUG - inverted index is ready
2019-11-11 00:05:32 - my_example - DEBUG - start dump to inverted_index/inverted_koi8r_json.index
2019-11-11 00:05:47 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7f83e06dd320>, dataset='resources/wikipedia_sample', output='inverted_index/inverted_koi8r_json.index')
2019-11-11 00:05:47 - my_example - DEBUG - start loading documents...
2019-11-11 00:05:47 - my_example - DEBUG - loading documents is complete
2019-11-11 00:05:47 - my_example - DEBUG - start building inverted index...
2019-11-11 00:06:02 - my_example - DEBUG - inverted index is ready
2019-11-11 00:06:02 - my_example - DEBUG - start dump to inverted_index/inverted_koi8r_json.index
2019-11-11 00:07:14 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7f5bdfa94320>, dataset='resources/wikipedia_sample', output='inverted_index/inverted_koi8r_json.index')
2019-11-11 00:07:14 - my_example - DEBUG - start loading documents...
2019-11-11 00:07:14 - my_example - DEBUG - loading documents is complete
2019-11-11 00:07:14 - my_example - DEBUG - start building inverted index...
2019-11-11 00:07:29 - my_example - DEBUG - inverted index is ready
2019-11-11 00:07:29 - my_example - DEBUG - start dump to inverted_index/inverted_koi8r_json.index
2019-11-11 00:12:16 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7fa9f98e4680>, dataset='resources/wikipedia_sample', output='inverted_index/inverted_koi8r_json.index')
2019-11-11 00:12:16 - my_example - DEBUG - start loading documents...
2019-11-11 00:12:16 - my_example - DEBUG - loading documents is complete
2019-11-11 00:12:16 - my_example - DEBUG - start building inverted index...
2019-11-11 00:12:31 - my_example - DEBUG - inverted index is ready
2019-11-11 00:12:31 - my_example - DEBUG - start dump to inverted_index/inverted_koi8r_json.index
2019-11-11 00:13:50 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7ff0cc1517a0>, dataset='resources/wikipedia_sample', output='inverted_index/inverted_koi8r_json.index')
2019-11-11 00:13:50 - my_example - DEBUG - start loading documents...
2019-11-11 00:13:51 - my_example - DEBUG - loading documents is complete
2019-11-11 00:13:51 - my_example - DEBUG - start building inverted index...
2019-11-11 00:14:05 - my_example - DEBUG - inverted index is ready
2019-11-11 00:14:05 - my_example - DEBUG - start dump to inverted_index/inverted_koi8r_json.index
2019-11-11 00:21:37 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7f9c7df62830>, dataset='resources/wikipedia_sample', index='inverted_index/inverted_koi8r_json.index', query_file=<_io.TextIOWrapper name='resources/queries_cp1251.txt' mode='r' encoding='cp1251'>)
2019-11-11 00:24:07 - my_example - INFO - Application called with arguments Namespace(callback=<function process_build_arguments at 0x7f51dc4cb7a0>, dataset='resources/wikipedia_sample', output='inverted_index/inverted_koi8r_json.index')
2019-11-11 00:24:07 - my_example - DEBUG - start loading documents...
2019-11-11 00:24:07 - my_example - DEBUG - loading documents is complete
2019-11-11 00:24:07 - my_example - DEBUG - start building inverted index...
2019-11-11 00:24:22 - my_example - DEBUG - inverted index is ready
2019-11-11 00:24:22 - my_example - DEBUG - start dump to inverted_index/inverted_koi8r_json.index
2019-11-11 00:24:37 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7fa36b501830>, dataset='resources/wikipedia_sample', index='inverted_index/inverted_koi8r_json.index', query_file=<_io.TextIOWrapper name='resources/queries_cp1251.txt' mode='r' encoding='cp1251'>)
2019-11-11 00:25:06 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7f19cc39c830>, dataset='resources/wikipedia_sample', index='inverted_index/inverted_koi8r_json.index', query_file=<_io.TextIOWrapper name='resources/queries_cp1251.txt' mode='r' encoding='cp1251'>)
2019-11-11 00:27:50 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7ff5128c7830>, dataset='resources/wikipedia_sample', index='inverted_index/inverted_koi8r_json.index', query_file=<_io.TextIOWrapper name='resources/queries_cp1251.txt' mode='r' encoding='cp1251'>)
2019-11-11 00:28:39 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7f32afa5d830>, dataset='resources/wikipedia_sample', index='inverted_index/inverted_koi8r_json.index', query_file=<_io.TextIOWrapper name='resources/queries_cp1251.txt' mode='r' encoding='cp1251'>)
2019-11-11 00:31:58 - my_example - INFO - Application called with arguments Namespace(callback=<function process_query_arguments at 0x7f17dcd72830>, dataset='resources/wikipedia_sample', index='inverted_index/inverted_koi8r_json.index', query_file=<_io.TextIOWrapper name='resources/queries_cp1251.txt' mode='r' encoding='cp1251'>)
2019-11-11 00:32:17 - my_example - DEBUG - the answer to query ['two', 'words'] is [2052, 2053, 4100, 8199, 8203, 8205, 8214, 25, 8220, 2076, 4124, 8222, 2082, 8227, 6182, 2088, 8237, 8240, 6195, 2100, 4149, 8243, 2104, 8249, 6210, 4163, 2116, 6216, 6220, 2130, 4179, 6226, 8276, 8280, 4188, 6237, 8295, 2154, 8302, 8305, 2162, 4210, 8311, 2176, 4224, 4227, 2187, 6291, 8339, 8340, 4246, 4251, 2204, 8351, 4257, 2217, 6315, 6140, 2221, 6321, 8375, 6328, 2234, 6330, 4285, 6336, 8387, 6340, 4294, 6343, 4298, 2251, 6347, 8400, 6355, 4314, 4315, 4318, 4320, 4321, 4326, 4327, 4333, 8439, 4348, 2303, 4359, 4363, 4364, 8459, 8465, 8468, 4379, 2333, 4382, 8478, 290, 4386, 4388, 4390, 8487, 2348, 8494, 4400, 305, 6449, 307, 6459, 6462, 2371, 8520, 8527, 336, 8531, 8533, 4449, 8547, 4453, 6501, 4457, 4458, 2411, 4468, 4472, 8573, 8574, 6533, 8582, 6546, 4503, 4506, 4507, 8612, 4524, 4531, 8630, 6589, 2494, 4542, 4543, 4545, 8645, 2510, 8654, 4565, 4566, 6613, 6621, 4575, 6623, 4583, 6631, 6643, 8702, 4615, 8716, 6677, 8730, 8731, 2593, 2594, 4647, 6698, 8751, 2608, 8753, 4660, 6710, 8758, 4667, 4668, 573, 8767, 4674, 6728, 8781, 8783, 4688, 594, 8786, 597, 4693, 599, 8795, 8796, 4702, 6752, 6753, 6759, 4717, 2671, 2673, 628, 640, 8832, 8833, 6793, 651, 4748, 8843, 6799, 657, 2705, 662, 6806, 664, 8855, 6811, 670, 4768, 677, 6827, 2736, 690, 8886, 4792, 700, 4800, 6854, 2761, 4810, 6865, 4820, 6878, 2784, 4833, 738, 2786, 740, 746, 4856, 2813, 4862, 8957, 8958, 4865, 775, 2824, 4871, 6920, 8968, 8971, 8973, 784, 2834, 4886, 4887, 8987, 800, 803, 2851, 9002, 2861, 4911, 824, 825, 9021, 9023, 4934, 9032, 6985, 2890, 843, 844, 4941, 848, 849, 4944, 852, 854, 4950, 4953, 2906, 872, 877, 4973, 887, 888, 2940, 898, 7043, 7045, 2952, 909, 7053, 9105, 914, 7066, 5020, 929, 7077, 5030, 5033, 5034, 5035, 2992, 5040, 9137, 5046, 951, 5048, 5049, 5050, 7105, 3012, 972, 9164, 980, 981, 983, 984, 3032, 986, 3038, 1000, 7144, 7148, 1006, 1017, 7165, 1023, 1028, 1029, 3080, 5131, 1038, 5134, 9235, 9239, 9248, 9253, 9256, 5170, 7218, 7222, 5176, 5177, 5178, 5185, 7235, 3144, 5194, 7242, 5211, 5216, 7264, 7270, 5224, 5225, 1130, 7272, 1132, 5244, 3198, 7294, 1152, 5253, 5254, 1160, 7304, 1164, 5261, 1171, 1177, 1178, 3225, 5278, 1183, 5282, 1196, 3246, 7342, 7344, 1201, 3259, 7355, 1214, 7366, 5326, 1241, 1242, 7388, 7390, 7401, 5363, 1273, 5370, 7426, 1288, 5391, 7442, 7445, 5401, 3355, 3356, 5407, 3363, 5416, 1325, 3375, 7473, 5431, 1338, 3390, 7489, 1346, 3395, 7502, 1361, 3409, 3410, 1367, 3416, 1369, 1373, 1374, 3427, 3430, 3436, 5489, 7538, 1395, 5499, 3454, 7558, 7565, 7566, 7573, 7578, 1436, 1437, 7580, 7583, 7586, 1451, 1453, 1456, 5561, 1466, 5573, 5574, 5576, 7627, 5584, 7635, 5592, 7660, 7663, 7672, 1530, 5626, 5630, 5639, 5641, 1546, 5643, 5644, 7689, 5648, 1558, 5654, 7706, 5664, 5665, 5667, 5689, 5693, 5703, 5704, 5715, 1620, 5716, 5729, 1640, 1645, 5743, 5751, 5759, 7816, 5771, 5781, 5785, 3738, 3747, 1701, 5822, 3778, 5830, 7890, 7891, 7921, 7922, 1784, 3833, 5882, 7931, 5884, 1790, 3850, 7946, 1806, 5902, 7952, 5905, 7954, 5909, 1814, 7964, 3870, 5921, 1834, 1835, 7978, 1837, 1842, 1844, 7989, 5942, 5943, 5945, 1859, 5955, 3914, 3933, 1890, 3942, 1897, 1902, 3954, 8060, 3968, 1921, 6019, 6021, 6024, 3978, 3986, 6035, 1944, 8088, 3995, 8091, 1950, 6046, 4001, 6051, 4010, 6059, 1967, 6066, 1980, 8125, 4031, 8127, 8128, 4035, 4041, 4050, 4052, 6100, 2006, 2011, 2018, 4068, 4069, 8169, 2029, 2030, 4077, 8176, 6130, 2037, 4092]
2019-11-11 00:32:17 - my_example - DEBUG - the answer to query ['even', 'more', 'words'] is [2052, 4100, 8199, 8203, 8205, 8214, 4124, 2082, 8227, 6182, 2088, 8237, 6195, 2100, 4149, 8243, 8249, 4163, 2116, 6216, 2130, 8280, 6237, 2154, 8302, 8305, 2162, 4210, 8311, 2176, 4224, 4227, 2187, 6291, 8339, 8340, 4246, 4251, 2204, 2217, 6315, 6140, 2226, 8375, 6328, 4285, 6340, 4294, 6343, 4298, 2251, 6352, 6355, 4314, 4318, 4320, 4321, 4333, 8439, 4348, 2303, 4359, 4363, 4364, 8465, 8468, 4379, 4382, 8478, 4386, 4388, 8487, 8494, 4400, 305, 6449, 307, 6462, 8520, 8527, 336, 8533, 4449, 8547, 4453, 6501, 4457, 4458, 2411, 4468, 4472, 8573, 6526, 8574, 6533, 6546, 4506, 4507, 4524, 4531, 8630, 4540, 6589, 2494, 4542, 4543, 4545, 8645, 2510, 8654, 6613, 6621, 4575, 6623, 4583, 6631, 8702, 4615, 8716, 8730, 8731, 2593, 2594, 4647, 6698, 2608, 4660, 6710, 4667, 4668, 573, 4674, 6728, 8781, 8783, 4688, 594, 8786, 4693, 599, 8795, 8796, 6753, 6759, 4717, 2671, 2673, 628, 640, 8832, 8833, 6793, 4748, 6799, 6806, 8855, 670, 4768, 677, 6827, 2736, 690, 8886, 4792, 700, 4800, 6854, 2761, 4810, 6865, 2784, 4833, 738, 2786, 746, 8958, 775, 2824, 4871, 6920, 8968, 8971, 8973, 784, 2834, 4886, 800, 803, 2851, 9002, 2861, 4911, 824, 825, 9021, 9023, 6985, 2890, 843, 844, 4941, 4942, 848, 849, 4944, 852, 854, 4950, 4953, 872, 887, 2940, 898, 7043, 7045, 909, 7053, 9105, 914, 5020, 7077, 5030, 5033, 5034, 2992, 5040, 9137, 5050, 3012, 972, 9164, 980, 981, 983, 984, 986, 3038, 1000, 7148, 1006, 1017, 1023, 1028, 1029, 5134, 9239, 7196, 9248, 1057, 9256, 5170, 7218, 7222, 5176, 5177, 5185, 7235, 3144, 5194, 7242, 5211, 5216, 7264, 7270, 5224, 5225, 1130, 7272, 5244, 3198, 7294, 5253, 5254, 7304, 1164, 5261, 1171, 1177, 1178, 3225, 5278, 1183, 5282, 1196, 7342, 7344, 1201, 7355, 1214, 5326, 1241, 1242, 7388, 7390, 7401, 5363, 1273, 7426, 1288, 5391, 7442, 7445, 5401, 3355, 3356, 3363, 5416, 3375, 1338, 3390, 7489, 1346, 3395, 7502, 3409, 3410, 1367, 3416, 3427, 3430, 1383, 3436, 5489, 1395, 3454, 7565, 7566, 7578, 1436, 1437, 7580, 7586, 1451, 1453, 1456, 5561, 1466, 7610, 5573, 5574, 5576, 7627, 5584, 7635, 5592, 7660, 7672, 1530, 5626, 5630, 5641, 7689, 5648, 1558, 5654, 5664, 5665, 5667, 5689, 7737, 5693, 5703, 5704, 1614, 5715, 5716, 5729, 1640, 1645, 5751, 7816, 5771, 5781, 5785, 3738, 1701, 5822, 3778, 5830, 7891, 7921, 7922, 1784, 3833, 5882, 7931, 5884, 3850, 7946, 1806, 5902, 7952, 5905, 7954, 1814, 7964, 3870, 1834, 7978, 1842, 1844, 7989, 5942, 5943, 5945, 3914, 3933, 1890, 1897, 1902, 8060, 3968, 1921, 6019, 6021, 6024, 3978, 3986, 6035, 8088, 3995, 8091, 3997, 1950, 6046, 6051, 4010, 6059, 6066, 1980, 8128, 4035, 4041, 4050, 2006, 2011, 4068, 8169, 2029, 2030, 4077, 8176, 6130, 2039, 4092]
2019-11-11 00:32:17 - my_example - DEBUG - the answer to query ['тестовый', 'запрос'] is []
2019-11-11 00:32:17 - my_example - DEBUG - the answer to query ['кодировка', 'cp1251'] is []
2019-11-12 21:24:02 - my_example - INFO - Application called with arguments Namespace()
